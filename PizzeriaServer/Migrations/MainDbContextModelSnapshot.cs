// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzeriaServer.Dbo;

#nullable disable

namespace PizzeriaServer.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PizzeriaServer.Meals.Models.Meal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MealId");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("BasePrice");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasColumnName("Category");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Meals", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Meal");
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.PizzaCrust", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CrustId");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("BasePrice");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("PizzaCrust", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BasePrice = 0.0m,
                            Name = "Thin"
                        },
                        new
                        {
                            Id = 2L,
                            BasePrice = 2.0m,
                            Name = "Thick"
                        });
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.PizzaSize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PizzaSizeId");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("BasePrice");

                    b.Property<int>("DiameterCentimeters")
                        .HasColumnType("int")
                        .HasColumnName("Diameter");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("PizzaSize", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BasePrice = 0.0m,
                            DiameterCentimeters = 20,
                            Name = "Small"
                        },
                        new
                        {
                            Id = 2L,
                            BasePrice = 8.0m,
                            DiameterCentimeters = 30,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3L,
                            BasePrice = 18.0m,
                            DiameterCentimeters = 45,
                            Name = "Large"
                        });
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.PizzaTopping", b =>
                {
                    b.Property<long>("MealId")
                        .HasColumnType("bigint")
                        .HasColumnName("MealId");

                    b.Property<long>("ToppingId")
                        .HasColumnType("bigint")
                        .HasColumnName("ToppingId");

                    b.HasKey("MealId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("PizzaToppings", (string)null);

                    b.HasData(
                        new
                        {
                            MealId = 1L,
                            ToppingId = 1L
                        },
                        new
                        {
                            MealId = 2L,
                            ToppingId = 1L
                        },
                        new
                        {
                            MealId = 2L,
                            ToppingId = 2L
                        },
                        new
                        {
                            MealId = 3L,
                            ToppingId = 1L
                        },
                        new
                        {
                            MealId = 3L,
                            ToppingId = 4L
                        },
                        new
                        {
                            MealId = 3L,
                            ToppingId = 5L
                        },
                        new
                        {
                            MealId = 4L,
                            ToppingId = 1L
                        },
                        new
                        {
                            MealId = 4L,
                            ToppingId = 3L
                        },
                        new
                        {
                            MealId = 4L,
                            ToppingId = 5L
                        });
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.Topping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ToppingId");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("BasePrice");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.Property<long?>("PizzaOrderLineId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PizzaOrderLineId");

                    b.ToTable("Toppings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BasePrice = 2.00m,
                            Name = "Mozzarella"
                        },
                        new
                        {
                            Id = 2L,
                            BasePrice = 2.00m,
                            Name = "Ham"
                        },
                        new
                        {
                            Id = 3L,
                            BasePrice = 2.00m,
                            Name = "Japanelo"
                        },
                        new
                        {
                            Id = 4L,
                            BasePrice = 2.00m,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            Id = 5L,
                            BasePrice = 2.00m,
                            Name = "Pineapple"
                        });
                });

            modelBuilder.Entity("PizzeriaServer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("Date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Default",
                            FirstName = "Jan",
                            LastName = "Nowak",
                            Login = "test",
                            Password = "TurboHard!23",
                            PhoneNumber = "732121245",
                            PostCode = "65-001",
                            Street = "Default"
                        });
                });

            modelBuilder.Entity("PizzeriaServer.Orders.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("OrderId");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<ulong>("IsDone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValue(0ul)
                        .HasColumnName("IsDone");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserNotes")
                        .HasColumnType("longtext")
                        .HasColumnName("UserNotes");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDone = 0ul,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDone = 0ul,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("PizzeriaServer.Orders.Models.PizzaOrderLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("OrderLineId");

                    b.Property<long>("CrustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L);

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("PizzaId")
                        .HasColumnType("bigint");

                    b.Property<long>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L);

                    b.HasKey("Id");

                    b.HasIndex("CrustId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderLines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CrustId = 0L,
                            OrderId = 1L,
                            PizzaId = 1L,
                            SizeId = 0L
                        },
                        new
                        {
                            Id = 2L,
                            CrustId = 0L,
                            OrderId = 2L,
                            PizzaId = 2L,
                            SizeId = 0L
                        },
                        new
                        {
                            Id = 3L,
                            CrustId = 0L,
                            OrderId = 1L,
                            PizzaId = 3L,
                            SizeId = 0L
                        },
                        new
                        {
                            Id = 4L,
                            CrustId = 0L,
                            OrderId = 2L,
                            PizzaId = 4L,
                            SizeId = 0L
                        });
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.Pizza", b =>
                {
                    b.HasBaseType("PizzeriaServer.Meals.Models.Meal");

                    b.HasDiscriminator().HasValue("Pizza");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BasePrice = 20.00m,
                            Category = 3,
                            Name = "Margherita"
                        },
                        new
                        {
                            Id = 2L,
                            BasePrice = 23.00m,
                            Category = 3,
                            Name = "Capricciosa"
                        },
                        new
                        {
                            Id = 3L,
                            BasePrice = 23.00m,
                            Category = 3,
                            Name = "Japanelo"
                        },
                        new
                        {
                            Id = 4L,
                            BasePrice = 24.00m,
                            Category = 3,
                            Name = "Hawaii"
                        });
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.PizzaTopping", b =>
                {
                    b.HasOne("PizzeriaServer.Meals.Models.Pizza", "Pizza")
                        .WithMany("PizzaToppings")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzeriaServer.Meals.Models.Topping", "Topping")
                        .WithMany("PizzaToppings")
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Topping");
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.Topping", b =>
                {
                    b.HasOne("PizzeriaServer.Orders.Models.PizzaOrderLine", null)
                        .WithMany("ExtraToppings")
                        .HasForeignKey("PizzaOrderLineId");
                });

            modelBuilder.Entity("PizzeriaServer.Orders.Models.Order", b =>
                {
                    b.HasOne("PizzeriaServer.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PizzeriaServer.Orders.Models.PizzaOrderLine", b =>
                {
                    b.HasOne("PizzeriaServer.Meals.Models.PizzaCrust", "Crust")
                        .WithMany()
                        .HasForeignKey("CrustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzeriaServer.Orders.Models.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzeriaServer.Meals.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzeriaServer.Meals.Models.PizzaSize", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crust");

                    b.Navigation("Order");

                    b.Navigation("Pizza");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.Topping", b =>
                {
                    b.Navigation("PizzaToppings");
                });

            modelBuilder.Entity("PizzeriaServer.Orders.Models.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("PizzeriaServer.Orders.Models.PizzaOrderLine", b =>
                {
                    b.Navigation("ExtraToppings");
                });

            modelBuilder.Entity("PizzeriaServer.Meals.Models.Pizza", b =>
                {
                    b.Navigation("PizzaToppings");
                });
#pragma warning restore 612, 618
        }
    }
}
